@page "/createuseraccount"
@using AdminFrontEnd.Models
@inject NavigationManager NavigationManager
@inject MonitoringAPIClient API

<h1>Create User Account</h1>
<hr />
<form>
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label for="UserUserName" class="control-label">Username</label>
                <input form="UserUserName" class="form-control" @bind="@user.UserUserName" />
            </div>
            <div class="form-group">
                <label for="Email" class="control-label">Email</label>
                <input form="Email" class="form-control" @bind="@user.UserEmail" />
            </div>
            <div class="form-group">
                <label for="UserRole" class="control-label">Role</label>
                <select @bind="@user.UserRole" class="form-control">
                    <option value="">-Select Role-</option>
                    <option value="User">User</option>
                    <option value="Admin">Admin</option>
                </select>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-primary" @onclick="@Create" value="Save" />
                <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>
</form>

@code{
    
    private UserAccounts user = new UserAccounts();

    protected async Task Create()
    {
        await API.CreateUserAccount(user);
        NavigationManager.NavigateTo("Users");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("Users");
    }

    //UserAccounts userAccount = new UserAccounts();
    //protected async void Create()
    //{
    //    await userAccountService.CreateUserAccountAsync(userAccount);
    //    NavigationManager.NavigateTo("users");
    //}
    //void Cancel()
    //{
    //    NavigationManager.NavigateTo("users");
    //}
}